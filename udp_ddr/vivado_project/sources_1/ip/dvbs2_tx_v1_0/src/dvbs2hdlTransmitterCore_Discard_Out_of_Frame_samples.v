// -------------------------------------------------------------
// 
// File Name: F:\FileFolder\DVB\dvbs2_tx_new\hdlsrc\dvbs2hdlTransmitter\dvbs2hdlTransmitterCore\dvbs2hdlTransmitterCore_Discard_Out_of_Frame_samples.v
// Created: 2024-01-10 13:49:59
// 
// Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: dvbs2hdlTransmitterCore_Discard_Out_of_Frame_samples
// Source Path: dvbs2hdlTransmitterCore/DVB-S2 Tx/Interleaver/DVB-S2 HDL Interleaver/Discard Out of  Frame samples
// Hierarchy Level: 5
// Model version: 4.5
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module dvbs2hdlTransmitterCore_Discard_Out_of_Frame_samples
          (clk,
           reset,
           enb,
           dataIn,
           valid,
           reset_1,
           fec,
           dataOut,
           validOut);


  input   clk;
  input   reset;
  input   enb;
  input   dataIn;
  input   valid;
  input   reset_1;
  input   fec;
  output  dataOut;
  output  validOut;


  reg  dataOut_1;
  reg  validOut_1;
  reg [15:0] count;  // ufix16
  reg  dataReg;
  reg  validReg;
  reg [15:0] count_next;  // ufix16
  reg  dataReg_next;
  reg  validReg_next;
  reg [15:0] COUNTMAX;  // ufix16


  always @(posedge clk or posedge reset)
    begin : Discard_Out_of_Frame_samples_process
      if (reset == 1'b1) begin
        count <= 16'b1111110100100000;
        validReg <= 1'b0;
        dataReg <= 1'b0;
      end
      else begin
        if (enb) begin
          count <= count_next;
          dataReg <= dataReg_next;
          validReg <= validReg_next;
        end
      end
    end

  always @(count, dataIn, dataReg, fec, reset_1, valid, validReg) begin
    count_next = count;
    if (fec) begin
      COUNTMAX = 16'b0011111101001000;
    end
    else begin
      COUNTMAX = 16'b1111110100100000;
    end
    if (valid && (count < COUNTMAX)) begin
      count_next = count + 16'b0000000000000001;
      dataReg_next = dataIn;
      validReg_next = 1'b1;
    end
    else begin
      dataReg_next = 1'b0;
      validReg_next = 1'b0;
    end
    if (reset_1) begin
      count_next = 16'b0000000000000000;
    end
    dataOut_1 = dataReg;
    validOut_1 = validReg;
  end



  assign dataOut = dataOut_1;

  assign validOut = validOut_1;

endmodule  // dvbs2hdlTransmitterCore_Discard_Out_of_Frame_samples

