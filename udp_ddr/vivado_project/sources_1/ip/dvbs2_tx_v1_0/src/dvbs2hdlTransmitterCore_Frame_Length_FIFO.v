// -------------------------------------------------------------
// 
// File Name: F:\FileFolder\DVB\dvbs2_tx_new\hdlsrc\dvbs2hdlTransmitter\dvbs2hdlTransmitterCore\dvbs2hdlTransmitterCore_Frame_Length_FIFO.v
// Created: 2024-01-10 13:49:59
// 
// Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: dvbs2hdlTransmitterCore_Frame_Length_FIFO
// Source Path: dvbs2hdlTransmitterCore/DVB-S2 Tx/PL Frame Generator/RAM FIFO/PL Data FIFO/Frame Length FIFO
// Hierarchy Level: 6
// Model version: 4.5
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module dvbs2hdlTransmitterCore_Frame_Length_FIFO
          (clk,
           reset,
           enb_1_8_0,
           dataIn,
           validIn,
           pop,
           dataOut);


  input   clk;
  input   reset;
  input   enb_1_8_0;
  input   [14:0] dataIn;  // ufix15
  input   validIn;
  input   pop;
  output  [14:0] dataOut;  // ufix15


  wire [3:0] count_step;  // ufix4
  wire [3:0] count_from;  // ufix4
  reg [3:0] HDL_Counter2_out1;  // ufix4
  wire [3:0] count;  // ufix4
  wire need_to_wrap;
  wire [3:0] count_value;  // ufix4
  wire [3:0] count_1;  // ufix4
  wire [3:0] count_step_1;  // ufix4
  wire [3:0] count_from_1;  // ufix4
  reg [3:0] HDL_Counter3_out1;  // ufix4
  wire [3:0] count_2;  // ufix4
  wire need_to_wrap_1;
  wire [3:0] count_value_1;  // ufix4
  wire [3:0] count_3;  // ufix4
  wire [14:0] Simple_Dual_Port_RAM_out1;  // ufix15


  // Count limited, Unsigned Counter
  //  initial value   = 0
  //  step value      = 1
  //  count to value  = 15
  assign count_step = 4'b0001;



  assign count_from = 4'b0000;



  assign count = HDL_Counter2_out1 + count_step;



  assign need_to_wrap = HDL_Counter2_out1 == 4'b1111;



  assign count_value = (need_to_wrap == 1'b0 ? count :
              count_from);



  assign count_1 = (validIn == 1'b0 ? HDL_Counter2_out1 :
              count_value);



  always @(posedge clk or posedge reset)
    begin : HDL_Counter2_process
      if (reset == 1'b1) begin
        HDL_Counter2_out1 <= 4'b0000;
      end
      else begin
        if (enb_1_8_0) begin
          HDL_Counter2_out1 <= count_1;
        end
      end
    end



  // Count limited, Unsigned Counter
  //  initial value   = 0
  //  step value      = 1
  //  count to value  = 15
  assign count_step_1 = 4'b0001;



  assign count_from_1 = 4'b0000;



  assign count_2 = HDL_Counter3_out1 + count_step_1;



  assign need_to_wrap_1 = HDL_Counter3_out1 == 4'b1111;



  assign count_value_1 = (need_to_wrap_1 == 1'b0 ? count_2 :
              count_from_1);



  assign count_3 = (pop == 1'b0 ? HDL_Counter3_out1 :
              count_value_1);



  always @(posedge clk or posedge reset)
    begin : HDL_Counter3_process
      if (reset == 1'b1) begin
        HDL_Counter3_out1 <= 4'b0000;
      end
      else begin
        if (enb_1_8_0) begin
          HDL_Counter3_out1 <= count_3;
        end
      end
    end



  dvbs2hdlTransmitterCore_SimpleDualPortRAM_generic_block2 #(.AddrWidth(4),
                                                             .DataWidth(15)
                                                             )
                                                           u_Simple_Dual_Port_RAM (.clk(clk),
                                                                                   .enb_1_8_0(enb_1_8_0),
                                                                                   .wr_din(dataIn),
                                                                                   .wr_addr(HDL_Counter2_out1),
                                                                                   .wr_en(validIn),
                                                                                   .rd_addr(HDL_Counter3_out1),
                                                                                   .dout(Simple_Dual_Port_RAM_out1)
                                                                                   );

  assign dataOut = Simple_Dual_Port_RAM_out1;

endmodule  // dvbs2hdlTransmitterCore_Frame_Length_FIFO

