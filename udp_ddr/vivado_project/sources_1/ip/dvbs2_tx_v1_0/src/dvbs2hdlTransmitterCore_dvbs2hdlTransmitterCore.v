// -------------------------------------------------------------
// 
// File Name: F:\FileFolder\DVB\dvbs2_tx_new\hdlsrc\dvbs2hdlTransmitter\dvbs2hdlTransmitterCore\dvbs2hdlTransmitterCore_dvbs2hdlTransmitterCore.v
// Created: 2024-01-10 13:49:59
// 
// Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: dvbs2hdlTransmitterCore_dvbs2hdlTransmitterCore
// Source Path: dvbs2hdlTransmitterCore
// Hierarchy Level: 1
// Model version: 4.5
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module dvbs2hdlTransmitterCore_dvbs2hdlTransmitterCore
          (clk,
           reset,
           enb,
           enb_1_8_0,
           enb_1_16_1,
           enb_1_8_1,
           enb_1_16_0,
           enb_1_2_0,
           enb_1_2_1,
           pktBitsIn,
           pktStartIn,
           pktEndIn,
           pktValidIn,
           frameStartIn,
           frameEndIn,
           TSorGS,
           DFL,
           UPL,
           SYNC,
           MODCOD,
           FECFrame,
           dataOut_re,
           dataOut_im,
           validOut,
           flag,
           nextFrame);


  input   clk;
  input   reset;
  input   enb;
  input   enb_1_8_0;
  input   enb_1_16_1;
  input   enb_1_8_1;
  input   enb_1_16_0;
  input   enb_1_2_0;
  input   enb_1_2_1;
  input   pktBitsIn;
  input   pktStartIn;
  input   pktEndIn;
  input   pktValidIn;
  input   frameStartIn;
  input   frameEndIn;
  input   [1:0] TSorGS;  // ufix2
  input   [15:0] DFL;  // uint16
  input   [15:0] UPL;  // uint16
  input   [7:0] SYNC;  // uint8
  input   [4:0] MODCOD;  // ufix5
  input   FECFrame;
  output  signed [17:0] dataOut_re;  // sfix18_En14
  output  signed [17:0] dataOut_im;  // sfix18_En14
  output  validOut;
  output  [1:0] flag;  // ufix2
  output  nextFrame;


  wire signed [17:0] DVB_S2_Tx_out1_re;  // sfix18_En14
  wire signed [17:0] DVB_S2_Tx_out1_im;  // sfix18_En14
  wire DVB_S2_Tx_out2;
  wire [1:0] DVB_S2_Tx_out3;  // ufix2
  wire DVB_S2_Tx_out4;

  // Copyright 2022 The Mathworks, Inc.


  dvbs2hdlTransmitterCore_DVB_S2_Tx u_DVB_S2_Tx (.clk(clk),
                                                 .reset(reset),
                                                 .enb(enb),
                                                 .enb_1_8_0(enb_1_8_0),
                                                 .enb_1_16_1(enb_1_16_1),
                                                 .enb_1_8_1(enb_1_8_1),
                                                 .enb_1_16_0(enb_1_16_0),
                                                 .enb_1_2_0(enb_1_2_0),
                                                 .enb_1_2_1(enb_1_2_1),
                                                 .pktBitsIn(pktBitsIn),
                                                 .pktStartIn(pktStartIn),
                                                 .pktEndIn(pktEndIn),
                                                 .pktValidIn(pktValidIn),
                                                 .frameStartIn(frameStartIn),
                                                 .frameEndIn(frameEndIn),
                                                 .TSorGS(TSorGS),  // ufix2
                                                 .DFL(DFL),  // uint16
                                                 .UPL(UPL),  // uint16
                                                 .SYNC(SYNC),  // uint8
                                                 .pMODCOD(MODCOD),  // ufix5
                                                 .pFECFrame(FECFrame),
                                                 .dataOut_re(DVB_S2_Tx_out1_re),  // sfix18_En14
                                                 .dataOut_im(DVB_S2_Tx_out1_im),  // sfix18_En14
                                                 .validOut(DVB_S2_Tx_out2),
                                                 .flag(DVB_S2_Tx_out3),  // ufix2
                                                 .nextFrame(DVB_S2_Tx_out4)
                                                 );

  assign dataOut_re = DVB_S2_Tx_out1_re;

  assign dataOut_im = DVB_S2_Tx_out1_im;

  assign validOut = DVB_S2_Tx_out2;

  assign flag = DVB_S2_Tx_out3;

  assign nextFrame = DVB_S2_Tx_out4;

endmodule  // dvbs2hdlTransmitterCore_dvbs2hdlTransmitterCore

