// -------------------------------------------------------------
// 
// File Name: F:\FileFolder\DVB\dvbs2_tx_new\hdlsrc\dvbs2hdlTransmitter\dvbs2hdlTransmitterCore\dvbs2hdlTransmitterCore_Frame_Length.v
// Created: 2024-01-10 13:49:59
// 
// Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: dvbs2hdlTransmitterCore_Frame_Length
// Source Path: dvbs2hdlTransmitterCore/DVB-S2 Tx/PL Frame Generator/Frame Length
// Hierarchy Level: 4
// Model version: 4.5
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module dvbs2hdlTransmitterCore_Frame_Length
          (clk,
           reset,
           enb,
           fecframe,
           modIdx,
           xFECFrameLength);


  input   clk;
  input   reset;
  input   enb;
  input   fecframe;
  input   [1:0] modIdx;  // ufix2
  output  [14:0] xFECFrameLength;  // ufix15


  reg  fecframe_1;
  wire [1:0] prelookup_idx_sat;  // ufix2
  wire [14:0] Normal_Frame_xFECFrame_Length_1 [0:3];  // ufix15 [4]
  wire [14:0] out;  // ufix15
  reg [14:0] Normal_Frame_xFECFrame_Length_out1;  // ufix15
  wire [1:0] prelookup_idx_sat_1;  // ufix2
  wire [14:0] Short_Frame_xFECFrame_Length_1 [0:3];  // ufix15 [4]
  wire [14:0] out_1;  // ufix15
  reg [14:0] Short_Frame_xFECFrame_Length_out1;  // ufix15
  wire [14:0] Switch_out1;  // ufix15
  reg [14:0] Delay2_reg [0:7];  // ufix15 [8]
  reg [14:0] Delay2_reg_next [0:7];  // ufix15 [8]
  reg [14:0] Delay2_out1;  // ufix15
  reg signed [31:0] Delay2_t_0_0;  // int32
  reg signed [31:0] Delay2_t_0_1;  // int32
  reg signed [31:0] Delay2_t_1;  // int32

  initial begin
    Normal_Frame_xFECFrame_Length_out1 = 15'b000000000000000;
    Short_Frame_xFECFrame_Length_out1 = 15'b000000000000000;
  end

  always @(posedge clk or posedge reset)
    begin : delayMatch_process
      if (reset == 1'b1) begin
        fecframe_1 <= 1'b0;
      end
      else begin
        if (enb) begin
          fecframe_1 <= fecframe;
        end
      end
    end



  assign prelookup_idx_sat = (modIdx == 2'b00 ? 2'b00 :
              (modIdx == 2'b11 ? 2'b11 :
              modIdx));



  assign Normal_Frame_xFECFrame_Length_1[0] = 15'b111111010010000;
  assign Normal_Frame_xFECFrame_Length_1[1] = 15'b101010001100000;
  assign Normal_Frame_xFECFrame_Length_1[2] = 15'b011111101001000;
  assign Normal_Frame_xFECFrame_Length_1[3] = 15'b011001010100000;
  assign out = Normal_Frame_xFECFrame_Length_1[prelookup_idx_sat];



  always @(posedge clk)
    begin : PipelineRegister_process
      if (enb) begin
        Normal_Frame_xFECFrame_Length_out1 <= out;
      end
    end



  assign prelookup_idx_sat_1 = (modIdx == 2'b00 ? 2'b00 :
              (modIdx == 2'b11 ? 2'b11 :
              modIdx));



  assign Short_Frame_xFECFrame_Length_1[0] = 15'b001111110100100;
  assign Short_Frame_xFECFrame_Length_1[1] = 15'b001010100011000;
  assign Short_Frame_xFECFrame_Length_1[2] = 15'b000111111010010;
  assign Short_Frame_xFECFrame_Length_1[3] = 15'b000110010101000;
  assign out_1 = Short_Frame_xFECFrame_Length_1[prelookup_idx_sat_1];



  always @(posedge clk)
    begin : PipelineRegister_1_process
      if (enb) begin
        Short_Frame_xFECFrame_Length_out1 <= out_1;
      end
    end



  assign Switch_out1 = (fecframe_1 == 1'b0 ? Normal_Frame_xFECFrame_Length_out1 :
              Short_Frame_xFECFrame_Length_out1);



  always @(posedge clk or posedge reset)
    begin : Delay2_process
      if (reset == 1'b1) begin
        for(Delay2_t_1 = 32'sd0; Delay2_t_1 <= 32'sd7; Delay2_t_1 = Delay2_t_1 + 32'sd1) begin
          Delay2_reg[Delay2_t_1] <= 15'b000000000000000;
        end
      end
      else begin
        if (enb) begin
          for(Delay2_t_0_1 = 32'sd0; Delay2_t_0_1 <= 32'sd7; Delay2_t_0_1 = Delay2_t_0_1 + 32'sd1) begin
            Delay2_reg[Delay2_t_0_1] <= Delay2_reg_next[Delay2_t_0_1];
          end
        end
      end
    end

  always @* begin
    Delay2_out1 = Delay2_reg[7];
    Delay2_reg_next[0] = Switch_out1;

    for(Delay2_t_0_0 = 32'sd0; Delay2_t_0_0 <= 32'sd6; Delay2_t_0_0 = Delay2_t_0_0 + 32'sd1) begin
      Delay2_reg_next[Delay2_t_0_0 + 32'sd1] = Delay2_reg[Delay2_t_0_0];
    end

  end



  assign xFECFrameLength = Delay2_out1;

endmodule  // dvbs2hdlTransmitterCore_Frame_Length

