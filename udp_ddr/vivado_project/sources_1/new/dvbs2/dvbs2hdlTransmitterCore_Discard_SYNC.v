// -------------------------------------------------------------
// 
// File Name: F:\FileFolder\DVB\dvbs2_tx_new\hdlsrc\dvbs2hdlTransmitter\dvbs2hdlTransmitterCore\dvbs2hdlTransmitterCore_Discard_SYNC.v
// Created: 2024-01-10 13:49:57
// 
// Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: dvbs2hdlTransmitterCore_Discard_SYNC
// Source Path: dvbs2hdlTransmitterCore/DVB-S2 Tx/BB Frame Generator/BB Header and Data CRC Generator/Data Field 
// Generator/Packetized Streams/Discard SYN
// Hierarchy Level: 7
// Model version: 4.5
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module dvbs2hdlTransmitterCore_Discard_SYNC
          (clk,
           reset,
           enb,
           dataIn,
           startIn,
           endIn,
           validIn,
           dataOut,
           startOut,
           endOut,
           validOut);


  input   clk;
  input   reset;
  input   enb;
  input   dataIn;
  input   startIn;
  input   endIn;
  input   validIn;
  output  dataOut;
  output  startOut;
  output  endOut;
  output  validOut;


  reg  dataOut_1;
  reg  startOut_1;
  reg  endOut_1;
  reg  validOut_1;
  reg [3:0] count;  // ufix4
  reg  dataReg;
  reg  validReg;
  reg  startReg;
  reg  endReg;
  reg [3:0] count_next;  // ufix4
  reg  dataReg_next;
  reg  validReg_next;
  reg  startReg_next;
  reg  endReg_next;
  reg [3:0] count_temp;  // ufix4
  reg  validReg_temp;


  always @(posedge clk or posedge reset)
    begin : Discard_SYNC_process
      if (reset == 1'b1) begin
        count <= 4'b0000;
        dataReg <= 1'b0;
        validReg <= 1'b0;
        startReg <= 1'b0;
        endReg <= 1'b0;
      end
      else begin
        if (enb) begin
          count <= count_next;
          dataReg <= dataReg_next;
          validReg <= validReg_next;
          startReg <= startReg_next;
          endReg <= endReg_next;
        end
      end
    end

  always @(count, dataIn, dataReg, endIn, endReg, startIn, startReg, validIn, validReg) begin
    count_temp = count;
    if (startIn) begin
      count_temp = 4'b0000;
    end
    if (validIn) begin
      if (count_temp < 4'b1000) begin
        startReg_next = 1'b0;
        validReg_temp = 1'b0;
      end
      else if (count_temp == 4'b1000) begin
        startReg_next = 1'b1;
        validReg_temp = 1'b1;
      end
      else begin
        startReg_next = 1'b0;
        validReg_temp = 1'b1;
      end
      if (count_temp < 4'b1001) begin
        count_temp = count_temp + 4'b0001;
      end
    end
    else begin
      validReg_temp = 1'b0;
      startReg_next = 1'b0;
    end
    if (validReg_temp) begin
      dataReg_next = dataIn;
      endReg_next = endIn;
    end
    else begin
      dataReg_next = 1'b0;
      endReg_next = 1'b0;
    end
    dataOut_1 = dataReg;
    startOut_1 = startReg;
    endOut_1 = endReg;
    validOut_1 = validReg;
    count_next = count_temp;
    validReg_next = validReg_temp;
  end



  assign dataOut = dataOut_1;

  assign startOut = startOut_1;

  assign endOut = endOut_1;

  assign validOut = validOut_1;

endmodule  // dvbs2hdlTransmitterCore_Discard_SYNC

