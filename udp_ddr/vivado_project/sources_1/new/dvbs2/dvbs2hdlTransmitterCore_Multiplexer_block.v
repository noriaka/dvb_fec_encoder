// -------------------------------------------------------------
// 
// File Name: F:\FileFolder\DVB\dvbs2_tx_new\hdlsrc\dvbs2hdlTransmitter\dvbs2hdlTransmitterCore\dvbs2hdlTransmitterCore_Multiplexer_block.v
// Created: 2024-01-10 13:49:59
// 
// Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: dvbs2hdlTransmitterCore_Multiplexer_block
// Source Path: dvbs2hdlTransmitterCore/DVB-S2 Tx/PL Frame Generator/Multiplexer
// Hierarchy Level: 4
// Model version: 4.5
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module dvbs2hdlTransmitterCore_Multiplexer_block
          (plheaderData_re,
           plheaderData_im,
           plheaderStart,
           plheaderEnd,
           plheaderValid,
           pilotdata_re,
           pilotdata_im,
           pilotValid,
           slotsData_re,
           slotsData_im,
           slotsValid,
           dummyData_re,
           dummyData_im,
           dummyValid,
           dummyHeaderSrt,
           dummyHeaderEnd,
           dataOut_re,
           dataOut_im,
           startOfPlheader,
           endOfPlheader,
           validOut);


  input   signed [17:0] plheaderData_re;  // sfix18_En16
  input   signed [17:0] plheaderData_im;  // sfix18_En16
  input   plheaderStart;
  input   plheaderEnd;
  input   plheaderValid;
  input   signed [17:0] pilotdata_re;  // sfix18_En16
  input   signed [17:0] pilotdata_im;  // sfix18_En16
  input   pilotValid;
  input   signed [17:0] slotsData_re;  // sfix18_En16
  input   signed [17:0] slotsData_im;  // sfix18_En16
  input   slotsValid;
  input   signed [17:0] dummyData_re;  // sfix18_En16
  input   signed [17:0] dummyData_im;  // sfix18_En16
  input   dummyValid;
  input   dummyHeaderSrt;
  input   dummyHeaderEnd;
  output  signed [17:0] dataOut_re;  // sfix18_En16
  output  signed [17:0] dataOut_im;  // sfix18_En16
  output  startOfPlheader;
  output  endOfPlheader;
  output  validOut;


  wire [1:0] y;  // ufix2
  wire signed [17:0] Multiport_Switch_out1_re;  // sfix18_En16
  wire signed [17:0] Multiport_Switch_out1_im;  // sfix18_En16
  wire Logical_Operator_out1;
  wire Logical_Operator3_out1;
  wire Logical_Operator2_out1;


  dvbs2hdlTransmitterCore_Priority_Encoder u_Priority_Encoder (.x1(plheaderValid),
                                                               .x2(pilotValid),
                                                               .x3(slotsValid),
                                                               .x4(dummyValid),
                                                               .y(y)  // ufix2
                                                               );

  assign Multiport_Switch_out1_re = (y == 2'b00 ? plheaderData_re :
              (y == 2'b01 ? pilotdata_re :
              (y == 2'b10 ? slotsData_re :
              dummyData_re)));
  assign Multiport_Switch_out1_im = (y == 2'b00 ? plheaderData_im :
              (y == 2'b01 ? pilotdata_im :
              (y == 2'b10 ? slotsData_im :
              dummyData_im)));



  assign dataOut_re = Multiport_Switch_out1_re;

  assign dataOut_im = Multiport_Switch_out1_im;

  assign Logical_Operator_out1 = dummyHeaderSrt | plheaderStart;



  assign startOfPlheader = Logical_Operator_out1;

  assign Logical_Operator3_out1 = dummyHeaderEnd | plheaderEnd;



  assign endOfPlheader = Logical_Operator3_out1;

  assign Logical_Operator2_out1 = dummyValid | (slotsValid | (pilotValid | plheaderValid));



  assign validOut = Logical_Operator2_out1;

endmodule  // dvbs2hdlTransmitterCore_Multiplexer_block

