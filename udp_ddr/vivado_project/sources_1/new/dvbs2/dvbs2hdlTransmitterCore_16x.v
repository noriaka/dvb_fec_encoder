// -------------------------------------------------------------
// 
// File Name: F:\FileFolder\DVB\dvbs2_tx_new\hdlsrc\dvbs2hdlTransmitter\dvbs2hdlTransmitterCore\dvbs2hdlTransmitterCore_16x.v
// Created: 2024-01-10 13:49:59
// 
// Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: dvbs2hdlTransmitterCore_16x
// Source Path: dvbs2hdlTransmitterCore/DVB-S2 Tx/PL Frame Generator/16x
// Hierarchy Level: 4
// Model version: 4.5
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module dvbs2hdlTransmitterCore_16x
          (clk,
           reset,
           enb,
           trigger,
           validOut);


  input   clk;
  input   reset;
  input   enb;
  input   trigger;
  output  validOut;


  reg  validOut_1;
  reg [3:0] count;  // ufix4
  reg  countActive;
  reg [3:0] count_next;  // ufix4
  reg  countActive_next;
  reg [4:0] add_temp;  // ufix5
  reg [4:0] t_0;  // ufix5


  always @(posedge clk or posedge reset)
    begin : alpha16x_process
      if (reset == 1'b1) begin
        count <= 4'b0000;
        countActive <= 1'b0;
      end
      else begin
        if (enb) begin
          count <= count_next;
          countActive <= countActive_next;
        end
      end
    end

  always @(count, countActive, trigger) begin
    add_temp = 5'b00000;
    t_0 = 5'b00000;
    count_next = count;
    countActive_next = countActive;
    if (countActive) begin
      if (count == 4'b1111) begin
        count_next = 4'b0000;
        countActive_next = 1'b0;
      end
      else begin
        t_0 = {1'b0, count};
        add_temp = t_0 + 5'b00001;
        if (add_temp[4] != 1'b0) begin
          count_next = 4'b1111;
        end
        else begin
          count_next = add_temp[3:0];
        end
      end
    end
    if (trigger) begin
      countActive_next = 1'b1;
    end
    validOut_1 = countActive;
  end



  assign validOut = validOut_1;

endmodule  // dvbs2hdlTransmitterCore_16x

