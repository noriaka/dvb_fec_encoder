// -------------------------------------------------------------
// 
// File Name: F:\FileFolder\DVB\dvbs2_tx_new\hdlsrc\dvbs2hdlTransmitter\dvbs2hdlTransmitterCore\dvbs2hdlTransmitterCore_Packetized_Streams.v
// Created: 2024-01-10 13:49:57
// 
// Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: dvbs2hdlTransmitterCore_Packetized_Streams
// Source Path: dvbs2hdlTransmitterCore/DVB-S2 Tx/BB Frame Generator/BB Header and Data CRC Generator/Data Field 
// Generator/Packetized Stream
// Hierarchy Level: 6
// Model version: 4.5
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module dvbs2hdlTransmitterCore_Packetized_Streams
          (clk,
           reset,
           enb,
           dataIn,
           startIn,
           endIn,
           validIn,
           frameEnd,
           frameStart,
           pktBits,
           pktValid,
           frameEndOut,
           frameStartOut);


  input   clk;
  input   reset;
  input   enb;
  input   dataIn;
  input   startIn;
  input   endIn;
  input   validIn;
  input   frameEnd;
  input   frameStart;
  output  pktBits;
  output  pktValid;
  output  frameEndOut;
  output  frameStartOut;


  wire dataOut;
  wire startOut;
  wire endOut;
  wire validOut;
  wire User_Packet_CRC_Generator_out1;
  wire User_Packet_CRC_Generator_out3;
  wire User_Packet_CRC_Generator_out4;
  reg  Delay_out1;
  reg  [9:0] Delay4_reg;  // ufix1 [10]
  wire Delay4_out1;
  reg  [7:0] Delay2_reg;  // ufix1 [8]
  wire Delay2_out1;
  reg  Delay1_out1;
  reg  [9:0] Delay3_reg;  // ufix1 [10]
  wire Delay3_out1;


  dvbs2hdlTransmitterCore_Discard_SYNC u_Discard_SYNC (.clk(clk),
                                                       .reset(reset),
                                                       .enb(enb),
                                                       .dataIn(dataIn),
                                                       .startIn(startIn),
                                                       .endIn(endIn),
                                                       .validIn(validIn),
                                                       .dataOut(dataOut),
                                                       .startOut(startOut),
                                                       .endOut(endOut),
                                                       .validOut(validOut)
                                                       );

  dvbs2hdlTransmitterCore_User_Packet_CRC_Generator u_User_Packet_CRC_Generator (.clk(clk),
                                                                                 .reset(reset),
                                                                                 .enb(enb),
                                                                                 .dataIn(dataOut),
                                                                                 .startIn(startOut),
                                                                                 .endIn(endOut),
                                                                                 .validIn(validOut),
                                                                                 .dataOut(User_Packet_CRC_Generator_out1),
                                                                                 .endOut(User_Packet_CRC_Generator_out3),
                                                                                 .validOut(User_Packet_CRC_Generator_out4)
                                                                                 );

  assign pktBits = User_Packet_CRC_Generator_out1;

  assign pktValid = User_Packet_CRC_Generator_out4;

  always @(posedge clk or posedge reset)
    begin : Delay_process
      if (reset == 1'b1) begin
        Delay_out1 <= 1'b0;
      end
      else begin
        if (enb) begin
          Delay_out1 <= frameEnd;
        end
      end
    end



  always @(posedge clk or posedge reset)
    begin : Delay4_process
      if (reset == 1'b1) begin
        Delay4_reg <= {10{1'b0}};
      end
      else begin
        if (enb) begin
          Delay4_reg[0] <= Delay_out1;
          Delay4_reg[32'sd9:32'sd1] <= Delay4_reg[32'sd8:32'sd0];
        end
      end
    end

  assign Delay4_out1 = Delay4_reg[9];



  dvbs2hdlTransmitterCore_MATLAB_Function u_MATLAB_Function (.clk(clk),
                                                             .reset(reset),
                                                             .enb(enb),
                                                             .pktEndIn(User_Packet_CRC_Generator_out3),
                                                             .frameEndIn(Delay4_out1),
                                                             .frameEndOut(frameEndOut)
                                                             );

  always @(posedge clk or posedge reset)
    begin : Delay2_process
      if (reset == 1'b1) begin
        Delay2_reg <= {8{1'b0}};
      end
      else begin
        if (enb) begin
          Delay2_reg[0] <= frameStart;
          Delay2_reg[32'sd7:32'sd1] <= Delay2_reg[32'sd6:32'sd0];
        end
      end
    end

  assign Delay2_out1 = Delay2_reg[7];



  always @(posedge clk or posedge reset)
    begin : Delay1_process
      if (reset == 1'b1) begin
        Delay1_out1 <= 1'b0;
      end
      else begin
        if (enb) begin
          Delay1_out1 <= Delay2_out1;
        end
      end
    end



  always @(posedge clk or posedge reset)
    begin : Delay3_process
      if (reset == 1'b1) begin
        Delay3_reg <= {10{1'b0}};
      end
      else begin
        if (enb) begin
          Delay3_reg[0] <= Delay1_out1;
          Delay3_reg[32'sd9:32'sd1] <= Delay3_reg[32'sd8:32'sd0];
        end
      end
    end

  assign Delay3_out1 = Delay3_reg[9];



  assign frameStartOut = Delay3_out1;

endmodule  // dvbs2hdlTransmitterCore_Packetized_Streams

