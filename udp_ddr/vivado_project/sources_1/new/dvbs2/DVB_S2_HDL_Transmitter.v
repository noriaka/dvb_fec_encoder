// -------------------------------------------------------------
// 
// File Name: F:\FileFolder\DVB\dvbs2_tx_new\hdlsrc\dvbs2hdlTransmitter\DVB_S2_HDL_Transmitter.v
// Created: 2024-01-10 13:49:59
// 
// Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Model base rate: 2e-08
// Target subsystem base rate: 2e-08
// 
// 
// Clock Enable  Sample Time
// -- -------------------------------------------------------------
// ce_out_2      2e-08
// ce_out_0      4e-08
// ce_out_1      1.6e-07
// -- -------------------------------------------------------------
// 
// 
// Output Signal                 Clock Enable  Sample Time
// -- -------------------------------------------------------------
// dataOut_re                    ce_out_0      4e-08
// dataOut_im                    ce_out_0      4e-08
// validOut                      ce_out_0      4e-08
// flag                          ce_out_1      1.6e-07
// nextFrame                     ce_out_2      2e-08
// -- -------------------------------------------------------------
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: DVB_S2_HDL_Transmitter
// Source Path: dvbs2hdlTransmitter/DVB-S2 HDL Transmitter
// Hierarchy Level: 0
// Model version: 4.78
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module DVB_S2_HDL_Transmitter
          (clk,
           reset,
           clk_enable,
           pktBitsIn,
           pktStartIn,
           pktEndIn,
           pktValidIn,
           frameStartIn,
           frameEndIn,
           TSorGS,
           DFL,
           UPL,
           SYNC,
           MODCOD,
           FECFrame,
           ce_out_0,
           ce_out_1,
           ce_out_2,
           dataOut_re,
           dataOut_im,
           validOut,
           flag,
           nextFrame);


  input   clk;
  input   reset;
  input   clk_enable;
  input   pktBitsIn;
  input   pktStartIn;
  input   pktEndIn;
  input   pktValidIn;
  input   frameStartIn;
  input   frameEndIn;
  input   [1:0] TSorGS;  // ufix2
  input   [15:0] DFL;  // uint16
  input   [15:0] UPL;  // uint16
  input   [7:0] SYNC;  // uint8
  input   [4:0] MODCOD;  // ufix5
  input   FECFrame;
  output  ce_out_0;
  output  ce_out_1;
  output  ce_out_2;
  output  signed [17:0] dataOut_re;  // sfix18_En14
  output  signed [17:0] dataOut_im;  // sfix18_En14
  output  validOut;
  output  [1:0] flag;  // ufix2
  output  nextFrame;


  wire enb;
  wire enb_1_8_0;
  wire enb_1_16_1;
  wire enb_1_8_1;
  wire enb_1_16_0;
  wire enb_1_2_0;
  wire enb_1_2_1;
  wire enb_1_1_1;
  wire signed [17:0] dvbs2hdlTransmitterCore_out1_re;  // sfix18_En14
  wire signed [17:0] dvbs2hdlTransmitterCore_out1_im;  // sfix18_En14
  wire dvbs2hdlTransmitterCore_out2;
  wire [1:0] dvbs2hdlTransmitterCore_out3;  // ufix2
  wire dvbs2hdlTransmitterCore_out4;
  reg  [15:0] delayMatch_reg;  // ufix1 [16]
  wire dvbs2hdlTransmitterCore_out4_1;


  DVB_S2_HDL_Transmitter_tc u_DVB_S2_HDL_Transmitter_tc (.clk(clk),
                                                         .reset(reset),
                                                         .clk_enable(clk_enable),
                                                         .enb(enb),
                                                         .enb_1_1_1(enb_1_1_1),
                                                         .enb_1_2_0(enb_1_2_0),
                                                         .enb_1_2_1(enb_1_2_1),
                                                         .enb_1_8_0(enb_1_8_0),
                                                         .enb_1_8_1(enb_1_8_1),
                                                         .enb_1_16_0(enb_1_16_0),
                                                         .enb_1_16_1(enb_1_16_1)
                                                         );

  dvbs2hdlTransmitterCore_dvbs2hdlTransmitterCore u_dvbs2hdlTransmitterCore (.clk(clk),
                                                                             .reset(reset),
                                                                             .enb(enb),
                                                                             .enb_1_8_0(enb_1_8_0),
                                                                             .enb_1_16_1(enb_1_16_1),
                                                                             .enb_1_8_1(enb_1_8_1),
                                                                             .enb_1_16_0(enb_1_16_0),
                                                                             .enb_1_2_0(enb_1_2_0),
                                                                             .enb_1_2_1(enb_1_2_1),
                                                                             .pktBitsIn(pktBitsIn),
                                                                             .pktStartIn(pktStartIn),
                                                                             .pktEndIn(pktEndIn),
                                                                             .pktValidIn(pktValidIn),
                                                                             .frameStartIn(frameStartIn),
                                                                             .frameEndIn(frameEndIn),
                                                                             .TSorGS(TSorGS),  // ufix2
                                                                             .DFL(DFL),  // uint16
                                                                             .UPL(UPL),  // uint16
                                                                             .SYNC(SYNC),  // uint8
                                                                             .MODCOD(MODCOD),  // ufix5
                                                                             .FECFrame(FECFrame),
                                                                             .dataOut_re(dvbs2hdlTransmitterCore_out1_re),  // sfix18_En14
                                                                             .dataOut_im(dvbs2hdlTransmitterCore_out1_im),  // sfix18_En14
                                                                             .validOut(dvbs2hdlTransmitterCore_out2),
                                                                             .flag(dvbs2hdlTransmitterCore_out3),  // ufix2
                                                                             .nextFrame(dvbs2hdlTransmitterCore_out4)
                                                                             );

  assign dataOut_re = dvbs2hdlTransmitterCore_out1_re;

  assign dataOut_im = dvbs2hdlTransmitterCore_out1_im;

  assign validOut = dvbs2hdlTransmitterCore_out2;

  assign flag = dvbs2hdlTransmitterCore_out3;

  always @(posedge clk or posedge reset)
    begin : delayMatch_process
      if (reset == 1'b1) begin
        delayMatch_reg <= {16{1'b0}};
      end
      else begin
        if (enb) begin
          delayMatch_reg[0] <= dvbs2hdlTransmitterCore_out4;
          delayMatch_reg[32'sd15:32'sd1] <= delayMatch_reg[32'sd14:32'sd0];
        end
      end
    end

  assign dvbs2hdlTransmitterCore_out4_1 = delayMatch_reg[15];



  assign nextFrame = dvbs2hdlTransmitterCore_out4_1;

  assign ce_out_0 = enb_1_2_1;

  assign ce_out_1 = enb_1_8_1;

  assign ce_out_2 = enb_1_1_1;

endmodule  // DVB_S2_HDL_Transmitter

